from asyncore import file_dispatcher
from dataclasses import dataclass
from msilib.schema import Registry
from platform import node, platform
import docker

c = docker.from_env()
constraints = ["node.labels.target==agent"]
c.services.create(image_name, name=name, hostname=hostname, constraints=constraints, networks=['blue_net'], args=['--serve'])


decisions
---------
swarm
  db node
  platform node 
  agent nodes
  - there can be multiple platforms on the same swarm

platform
  redis (addressable by hostname: blue_db_redis, deployed to swarm node labeled db)
  api (addressable by hostname: blue_platform_api, deployed to swarm node labeled platform)
  frontend (addressable by hostname: blue_platform_frontend, deployed to swarm node labeled platform)
  set agent registries
  set of data registries
  - multiple platforms on the same swarm use a different network (blue_net_{platform_name})
  - platform configuration should be saveable, consisting of:
    - platform_name
    - list of agent/data registries and their registry dataclass
    
session 
  an agent registry
  a data registry 
  - session is part of a platform
  - each session can talk to only a single agent/data registry
  - when creating a session user chooses registries
  - users can add/remove agents (from selected registry) to a session

agents containers
  - deployed when the agent is added to a session, if not already running
  - removed when inactive for more than k hours
  - agent containers are deployed to swarm node labeled agent
  - agent containers are addressable by hostname: blue_agent_{registry_name}_{agent_name}
  - agent containers are deployed as services under blue_net_{platform_name} network

agentregistry
  set of agent metadata
  - defines a set of agents with properties
  - should be saveable to file
  - stored on redis 
  - agentregistry doesn't have a separate runtime, it is created as an object within the api

dataregistry
  set of data source metadata 
  - should be saveable to file
  - stored on redis
  - dataregistry doesn't have a separate runtime, it is created as an object within the api

configuration
   platform configuration:
       
    - db.host is always redis, if deployed to swarm, localhost otherwise
    - api is always on blue_api on the blue_net_{platform_name} but for ui needs an external address, which is obtained 
    from .env file
        - .env file updated when deployed (HOW?)
    - rpc.host is blue_agent_{registry_name}_{agent_name} (all parameters obtained from  api call)

