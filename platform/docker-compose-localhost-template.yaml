---
version: '3.8'
x-blue-common:
  &blue-common
  # build: .
  image: python:3.9.0
  environment:
    &blue-common-env
    BLUE__PROPERTIES: '{"platform.name":"${BLUE_DEPLOY_PLATFORM}", "platform.deploy.target":"${BLUE_DEPLOY_TARGET}", "api.server":"${BLUE_PUBLIC_API_SERVER}", "db.host":"blue_db_redis", "embeddings_model":"/blue_data/models/paraphrase-MiniLM-L6-v2"}'
  depends_on:
    &blue-common-depends-on
    redis:
      condition: service_healthy

services:
  redis:
    image: redis/redis-stack:latest
    hostname: blue_db_redis
    ports:
      - "8000:8000"
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    networks:
      - network_bridge
    volumes:
      - blue_${BLUE_DEPLOY_PLATFORM}_data:/blue_data
    environment:
      <<: *blue-common-env
    restart: always

  api:
    image: blue-platform-api
    hostname: blue_platform_api
    ports:
      - "5050:5050"
    networks:
      - network_bridge
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - blue_${BLUE_DEPLOY_PLATFORM}_data:/blue_data
    environment:
      <<: *blue-common-env
    env_file:
      - api/api.env
    restart: always

  frontend:
    image: blue-platform-frontend
    hostname: blue_platform_frontend
    ports:
      - "3000:3000"
    networks:
      - network_bridge
    environment:
      <<: *blue-common-env
      BLUE_PUBLIC_API_SERVER: "${BLUE_PUBLIC_API_SERVER}"
    restart: always

networks:
  network_bridge:
      driver: bridge

volumes:
  blue_${BLUE_DEPLOY_PLATFORM}_data:
      external: true

